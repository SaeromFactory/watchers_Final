<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

		<context:component-scan base-package="com.watchers" />

		<bean id="eventLoggingAspect"  	class="com.watchers.common.aspect.EventLoggingAspects" />
		<bean id="exceptionAspect"  	class="com.watchers.common.aspect.ExceptionAspects" />

		<aop:config proxy-target-class="false" expose-proxy="true">
			<aop:aspect id="eventLoggingAspect" ref="eventLoggingAspect">
				<aop:around method="aroundAdvice"  pointcut="execution(* com.watchers.business..*Service.*(..))" />
				<aop:around method="aroundAdvice"  pointcut="execution(* com.watchers.business..*Mapper.*(..))" />
			</aop:aspect>
			
			<aop:aspect id="exceptionAspect" ref="exceptionAspect">
				<aop:pointcut id="serviceExceptionPointcut" expression="execution(* com.watchers..*Service.*(..))" />
				<aop:pointcut id="mapperExceptionPointcut" expression="execution(* com.watchers..*Mapper.*(..))" />
				<aop:after-throwing pointcut-ref="serviceExceptionPointcut" method="exceptionAdvice" throwing="ex" />
				<aop:after-throwing pointcut-ref="mapperExceptionPointcut" method="exceptionAdvice" throwing="ex" />
			</aop:aspect>
		</aop:config>
				
</beans>
